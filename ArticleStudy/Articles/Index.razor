@page "/Articles"
@page "/Articles/Index"
@using ArticleStudy.Models.Database;

@inject IArticleRepository ArticleRepository
@inject NavigationManager NavigationManagerReference

<div style="width:50%; height:100%; padding-right:1em; float:left">
    <div style="border-style:groove; border-radius:10px; height:100%">
        <div class="container">
            <div class="row">
                <div class="col-md-12" style="overflow:auto">
                    <EditForm Model="Model" OnValidSubmit="btnSubmit_Click">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <ValidationSummary></ValidationSummary>
                        <div class="form-group">
                            <label for="txtTitle">제목</label>
                            <InputText id="txtTitle" class="form-control" placeholder="제목을 입력해주세요." @bind-Value="@Model.Title"></InputText>
                            <ValidationMessage For="@(()=> Model.Title)" class="form-text text-muted"></ValidationMessage>
                        </div>

                        <div class="form-group">
                            <label for="txtContent">내용</label>
                            <InputTextArea id="txtContent" class="form-control" placeholder="내용을 입력해주세요." @bind-Value="@Model.Content" rows="15"></InputTextArea>
                            <ValidationMessage For="@(()=> Model.Content)" class="form-text text-muted"></ValidationMessage>
                        </div>

                        <div class="form-group" style="margin-top:1em; float:right;">
                            <button type="submit" class="btn btn-primary">저장</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

<div style="width:50%; height:100%; padding-left:1em; float:left">
    <div style="border-style:groove; border-radius:10px; height:100%">
        
    </div>
</div>


@code {
    public Article Model { get; set; } = new Article();



    protected async Task btnSubmit_Click()
    {
        // 저장 로직
        await ArticleRepository.AddArticleAsync(Model);
        Model = new Article();

        NavigationManagerReference.NavigateTo("/Articles");

    }
}
